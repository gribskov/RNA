"""=================================================================================================
MotifDB class is for creating and using XIOS graph dictionaries

011220

0,5  1,2  3,4

00 -> 11 *
    0011 -> 1122
        010122
        011022
        011202 *
        011220 *
    0101 -> 1212  *
        010212 *
        012012 *
        012102 *
        012120 *
    0110 -> 1221  *
        010221 *
        012021 *
        012201 *
        012210 *

01
    01 23

    02 13
    03 12


Michael Gribskov     15 June 2019
================================================================================================="""


class MotifDB(list):
    """=============================================================================================

    ============================================================================================="""


# __init__ inherited from list
    def dummy(self):
        pass
        return

class SerialRNA(list):
    """=============================================================================================
    for working with RNAS encoded as 001212 meaning ( ) ( [ ) ]
    ============================================================================================="""

    def connected(self):
        """-----------------------------------------------------------------------------------------
        return the connected graph(s) in the current structure. The entire graph is connected if one
        structure is returned

        :return: list of SerialRNA
        -----------------------------------------------------------------------------------------"""
        open = []
        print('\nrna', rna)
        begin = 0
        for pos in range(len(rna)):
            if rna[pos] in open:
                open.remove(rna[pos])
                if len(open) == 0:
                    print('connected', rna[begin:pos + 1])
                    begin = pos + 1
            else:
                open.append(rna[pos])
# --------------------------------------------------------------------------------------------------
# testing
# --------------------------------------------------------------------------------------------------
if __name__ == '__main__':
    rnas = [[0, 0, 1, 1, 2, 2],
            [0, 1, 0, 1, 2, 2],
            [0, 1, 1, 2, 2, 0],
            [0, 1, 2, 1, 2, 0]
            ]


    for testcase in rnas:
        rna = SerialRNA(testcase)
        print(rna)

exit(0)
